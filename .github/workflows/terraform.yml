name: Deploy to AWS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Print Environment Variables
        run: |
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}"
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          echo "AWS_SESSION_TOKEN=${{ secrets.AWS_SESSION_TOKEN }}"
          echo "DB_MASTER_USERNAME=${{ secrets.DB_MASTER_USERNAME }}"
          echo "DB_MASTER_PASSWORD=${{ secrets.DB_MASTER_PASSWORD }}"

      - name: Check for Existing RDS Cluster
        id: check_rds_cluster
        run: |
          CLUSTER_ID="galega-db-aurora-new"
          EXISTING_CLUSTER=$(aws rds describe-db-clusters --query "DBClusters[?DBClusterIdentifier=='$CLUSTER_ID']" --output text)
          if [ -n "$EXISTING_CLUSTER" ]; then
            echo "RDS cluster '$CLUSTER_ID' already exists."
            echo "exists=true" >> $GITHUB_ENV
          else
            echo "RDS cluster '$CLUSTER_ID' does not exist."
            echo "exists=false" >> $GITHUB_ENV
          fi

      - name: Terraform Init
        if: env.exists == 'false' || env.exists == 'undefined'
        run: terraform init

      - name: Terraform Plan
        if: env.exists == 'false' || env.exists == 'undefined'
        env:
          TF_LOG: DEBUG
          TF_VAR_db_master_username: ${{ secrets.DB_MASTER_USERNAME }}
          TF_VAR_db_master_password: ${{ secrets.DB_MASTER_PASSWORD }}
        run: terraform plan

      - name: Terraform Apply
        if: env.exists == 'false' || env.exists == 'undefined'
        env:
          TF_VAR_db_master_username: ${{ secrets.DB_MASTER_USERNAME }}
          TF_VAR_db_master_password: ${{ secrets.DB_MASTER_PASSWORD }}
        run: terraform apply -auto-approve

      - name: Wait for RDS Cluster to be available
        if: env.exists == 'false' || env.exists == 'undefined'
        run: sleep 60
